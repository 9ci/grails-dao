# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    branches:
      only:
        - circleci

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      # JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Xmx3400M -Dorg.gradle.daemon=false"
      TERM: dumb

    parallelism: 1
    resource_class: large

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}

      - run: python --version
      - run: python3 --version

      # see https://github.com/palantir/gradle-configuration-resolver-plugin
      #- run: ./gradlew resolveConfigurations
      - run: ./gradlew test-app:dependencies

      - save_cache:
          paths:
            - ~/.m2
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: ./gradlew gorm-tools:test --max-workers=1

      - store_artifacts:
          path: plugin/build/reports/tests/test/
          destination: test-reports/unit/

      - store_artifacts:
          path: plugin/build/reports/codenarc/
          destination: codenarc/

      - store_test_results:
          path: plugin/build/test-results

      - run: ./gradlew test-app:check --max-workers=1

      - store_artifacts:
          path: examples/test-app/build/reports/tests
          destination: test-reports/test-app/

      - store_test_results:
          path: examples/test-app/build/test-results
