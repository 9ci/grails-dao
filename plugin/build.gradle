buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:1.1"
        classpath "gradle.plugin.com.energizedwork:idea-gradle-plugins:1.4"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

apply plugin:"idea"
apply plugin:"com.energizedwork.webdriver-binaries"
apply plugin:"com.energizedwork.idea-project-components"
apply plugin: 'codenarc'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url = "https://dl.bintray.com/9ci/grails-plugins"}
    jcenter()
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
}

dependencies {
    //this is for GrailsParameterMapRowMapper that uses the MockHttpServletRequest
    compileOnly "org.springframework:spring-test"

    //used for bundled Test traits
    compileOnly "org.grails:grails-gorm-testing-support"
    compileOnly "org.grails:grails-web-testing-support"
    compileOnly "org.grails.plugins:build-test-data:$buildTestDataVersion"

    //testCompile "org.grails.plugins:views-json-testing-support:$viewsVersion"

    codenarc 'org.codenarc:CodeNarc:0.27.0'
    codenarc "io.9ci.yakworks:codenarc-extra:1.0.2"
}

//bootRepackage and maybe addResources are needed for the test-projects grails.plugin.compile depndency to work
bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
bootRepackage.enabled = false

codenarc {
    toolVersion = '0.27.0'
    configFile = file("${commonBuild}/codenarc-rules.groovy")//project.resources.text.fromString("${commonBuild}/codenarc-rules.groovy".toURL().text)
    reportFormat = 'html'
    //ignoreFailures = true

    maxPriority1Violations = 0
    maxPriority2Violations = 4
    maxPriority3Violations = 4
}

codenarcMain {
    exclude '**/GormScalars.groovy'
}

codenarcTest {
    ignoreFailures = true
}

//this makes the groovy docs much more readable by shorting packages and providing links
groovydoc {
    excludes = ['**/*GrailsPlugin.groovy','**/Application.groovy' ]
    link('http://download.oracle.com/javase/8/docs/api/', 'java.', 'org.xml', 'javax.', 'org.xml.')
    link("https://docs.spring.io/spring/docs/4.2.x/javadoc-api/", 'org.springframework')
    link('http://groovy.codehaus.org/api/',  'groovy.', 'org.codehaus.groovy.')
    link('https://docs.grails.org/3.3.x/api',  'grails.', 'org.grails.')
    link('https://testing.grails.org/latest/api',  'grails.testing.', 'org.grails.testing.')
    link('http://gorm.grails.org/latest/hibernate/api/',  'grails.gorm', 'grails.orm', 'org.grails.datastore', 'org.grails.orm')
}

// Added to be able to see failed tests and the cause in console on test run.
// This really helpful and needed when viewing on Travis CI or others.
test {
    //testLogging.showStandardStreams = true
    testLogging {
        exceptionFormat = 'full'
        events "failed"//, "passed", "skipped", "standardOut", "standardError"
    }
}
