buildscript {
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath "org.grails:grails-docs:$grailsVersion"
		//classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
		classpath 'io.github.groovylang.groovydoc:groovydoc-gradle-plugin:1.0.1'
	}
}

apply plugin: 'idea'
apply plugin:'groovy'

repositories {
	mavenLocal()
	maven { url "https://repo.grails.org/grails/core" }
}

//Root project and view-tools plugin uses same version.
version project.projectVersion

project(':dao') {
	version = project.projectVersion
}

ext {
	commonBuild = "https://raw.githubusercontent.com/yakworks/grails-common-build/master"
	grailsApps = ['test-app']
	grailsPlugins = ['dao']
}


subprojects {

	boolean isGrailsApp = grailsApps.contains(project.name)
	boolean isGrailsPlugin = grailsPlugins.contains(project.name)
	boolean isGrailsProject = isGrailsApp || isGrailsPlugin
	boolean isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")

	println project.name + ":" + version.toString()

	ext {
		userOrg = "grails"
		set "tomcat.version", "8.5.5"
		isSnapshot = isBuildSnapshot
	}

    apply plugin:'groovy'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }

    //apply plugin:"eclipse"
    apply plugin:"idea"

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-logging"
        compile "org.springframework.boot:spring-boot-autoconfigure"
        compile "org.grails:grails-core"
        compile "org.grails:grails-dependencies"
        compile "org.grails:grails-web-boot"
        compile "org.grails.plugins:cache"

        runtime "com.h2database:h2"

        testCompile "org.grails:grails-plugin-testing"
    }
	//apply from:"$commonBuild/common.gradle"


	if (isGrailsPlugin) {
        apply plugin:"org.grails.grails-plugin"
        apply plugin:"org.grails.grails-gsp"

        dependencies {
            compile "org.springframework.boot:spring-boot-starter-actuator"
            provided "org.springframework.boot:spring-boot-starter-tomcat"

            profile "org.grails.profiles:web-plugin"
            provided "org.grails:grails-plugin-services"
            provided "org.grails:grails-plugin-domain-class"

            console "org.grails:grails-console"
        }

		//apply from: "${commonBuild}/common-plugin.gradle"
		//apply from: "${commonBuild}/common-publishing.gradle"
		group "org.grails.plugins"
	}

	if (isGrailsApp) {
        apply plugin:"org.grails.grails-web"
        apply plugin:"war"
        apply plugin:"org.grails.grails-gsp"

        dependencies {
            profile "org.grails.profiles:web"
            compile "org.springframework.boot:spring-boot-starter-actuator"
            provided "org.springframework.boot:spring-boot-starter-tomcat"

            console "org.grails:grails-console"
        }

        bootRun {
            jvmArgs('-Dspring.output.ansi.enabled=always')
            addResources = true
        }
		//apply from: "${commonBuild}/common-project.gradle"
		group "org.grails"
	}

}
