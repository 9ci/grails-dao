buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    // for CI 'resolveConfigurations' task see https://github.com/palantir/gradle-configuration-resolver-plugin
    id "com.energizedwork.idea-project-components" version "1.4"
    id "com.palantir.configuration-resolver" version "0.2.0"
    id "org.ajoberstar.git-publish" version "0.3.2"
    id 'com.diffplug.gradle.spotless' version '1.3.1'
}

allprojects {

    apply plugin:'groovy'
    apply plugin: 'com.palantir.configuration-resolver' //see above CI usage on this

    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/9ci/grails-plugins"}
        maven { url "http://repo.9ci.com/artifactory/grails-plugins" }
    }

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    //for snapshot marked with {changing=true) this checks more often
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
    }
}

subprojects {

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-logging"
        compile "org.springframework.boot:spring-boot-autoconfigure"
        compile "org.grails:grails-core"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        compile "org.springframework.boot:spring-boot-starter-tomcat"
        compile "org.grails:grails-web-boot"

        compile "org.grails:grails-logging"
        compile "org.grails:grails-plugin-databinding"
        //compile "org.grails:grails-plugin-i18n"
        compile "org.grails:grails-plugin-services"
        compile 'org.grails.plugins:grails-java8:1.2.2'

        compile "org.grails.plugins:events"
        compile "org.codehaus.gpars:gpars:1.2.0"

        compileOnly "org.grails.plugins:views-json:$viewsVersion"
        compileOnly "org.grails.plugins:views-json-templates:$viewsVersion"
        compileOnly "org.grails:views-json-testing-support:$viewsVersion"

        compile "org.grails.plugins:hibernate5"
        compile "org.hibernate:hibernate-core:$hibernateVersion"
        compile "org.hibernate:hibernate-ehcache:$hibernateVersion"

        testRuntime "com.h2database:h2"
        testRuntime "org.apache.tomcat:tomcat-jdbc"

        testCompile "org.grails:grails-gorm-testing-support"
        testCompile "org.grails:grails-web-testing-support"
        testCompile "org.grails.plugins:build-test-data:$buildTestDataVersion"
        testCompile "org.grails.plugins:geb"
        testCompile "org.grails:views-json-testing-support:$viewsVersion"

        testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
        testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.6.0"
        testRuntime "org.seleniumhq.selenium:selenium-remote-driver:3.6.0"
        testRuntime "org.seleniumhq.selenium:selenium-api:3.6.0"
    }

    test {
        //testLogging.showStandardStreams = true
        testLogging.exceptionFormat = 'full'
    }

}

apply from: "gradle/docs.gradle"
apply from: "gradle/github-publish.gradle"
