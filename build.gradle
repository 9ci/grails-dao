//It all starts here
buildscript {
  repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:hibernate5:7.0.4"
    //classpath "org.grails.plugins:views-gradle:2.0.2"
    classpath "org.yakworks:gradle-plugins:1.2.0"
  }
}

// apply plugin: 'yakworks.shipyak' //our opinionated defaults for gradle groovy & grails projects
// apply plugin:"org.grails.plugins.views-json"

subprojects {
  repositories {
    maven { url "https://repo.grails.org/grails/core" }
  }

  plugins.withId('java') {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    dependencies {
      developmentOnly("org.springframework.boot:spring-boot-devtools")
      compile "org.springframework.boot:spring-boot-starter-logging"
      compile "org.springframework.boot:spring-boot-autoconfigure"
      compile "org.grails:grails-core"
      compile "org.springframework.boot:spring-boot-starter-tomcat"

      compile "org.grails:grails-web-boot"

      // compile "org.grails:grails-plugin-url-mappings"
      compile "org.grails:grails-logging"
      compile "org.grails:grails-plugin-databinding"
      compile "org.grails:grails-plugin-services"
      compile "org.grails:grails-plugin-interceptors"

      // compile 'org.grails.plugins:grails-java8:1.2.3'

      compile "org.grails.plugins:events"

      compile "org.grails.plugins:hibernate5"
      compile "org.hibernate:hibernate-core:$versionHibernate"
      compile "org.hibernate:hibernate-ehcache:$versionHibernate"

      compile "org.grails.plugins:cache:$vGrailsCache"
      compile "org.codehaus.gpars:gpars:1.2.1"
      compile "org.apache.commons:commons-lang3:3.11"
      compile 'org.codehaus.groovy:groovy-dateutil'

      runtime "com.h2database:h2"
      runtime "com.zaxxer:HikariCP:3.4.5"

      compileOnly('org.grails:grails-datastore-rest-client:6.1.9.RELEASE'){
        exclude group:'org.grails', module:'grails-plugin-converters'
      }

      compileOnly "io.micronaut:micronaut-inject-groovy"

      testCompile "org.mockito:mockito-core"
      testCompile "org.grails:grails-gorm-testing-support"
      testCompile "org.grails:grails-web-testing-support"
      // testCompile "org.grails:grails-datastore-rest-client"
      testCompile "org.grails.plugins:geb"
      testCompile "org.grails.plugins:build-test-data:$versionBuildTestData"
      testCompile "org.grails:views-json-testing-support:$versionViews"
      testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    }

    //testlogger {
      // Defaults from https://github.com/radarsh/gradle-test-logger-plugin
      // theme 'standard'
      // showExceptions true
      // slowThreshold 2000
      // showSummary true
      // showSimpleNames false
      // showPassed true
      // showSkipped true
      // showFailed true
      // showStandardStreams false //Show PRINTLNS
      // showPassedStandardStreams true
      // showSkippedStandardStreams true
      // showFailedStandardStreams true
    //}
  }
  configurations {
    testCompile.extendsFrom compileOnly //includes the compileOnly in tests too so we don't have to list twice
    all {
      resolutionStrategy.cacheChangingModulesFor 1, 'seconds' //when changing = true this sets the cache time
    }
    developmentOnly
    runtimeClasspath {
      extendsFrom developmentOnly
    }
  }

  //sets the path to sys properties so we can use it find grails-app/conf during AST
  plugins.withId('groovy') {
    compileGroovy {
      groovyOptions.fork = true
      groovyOptions.forkOptions.jvmArgs = ['-Dgradle.projectDir=' + project.projectDir.absolutePath]
    }
  }
}

ext.codenarcRuleset= '''
  // getRule('Println').enabled = false
  getRule('AbcMetric').enabled = false
  getRule('CatchRuntimeException').enabled = false
'''
