
import org.apache.tools.ant.filters.*

//https://stackoverflow.com/questions/17465353/how-to-replace-a-string-for-a-buildvariant-with-gradle-in-android-studio/17572644#17572644
def updateReadme(variant, fromString, toString) {
    def updatedContent = new File('README.md').getText('UTF-8').replaceAll('Version: 3.3.1-SNAPSHOT', 'Version: 3.3.1.RELEASE')
    new File('README.md').write(updatedContent, 'UTF-8')
}


task versionReadme {
    doLast {
        //updates the Version: 6.1.x-whatever in the first yakworks logo part
        def updatedContent = new File('README.md').getText('UTF-8')
            .replaceFirst(/Version:\s*[\d\.]+[^\s]+/, "version: $version")

        updatedContent = updatedContent
            .replaceFirst(/gorm-tools:[\d\.]+[^"]+/, "gorm-tools: $version")

        new File('README.md').write(updatedContent, 'UTF-8')
    }
}

//https://mrhaki.blogspot.com/2010/10/gradle-goodness-copy-files-with.html
task copyReadme(type: Copy) {
    from '.'
    into 'build/mkdocs'
    include 'README.md'
    filter { line -> line.contains('Gradle') ? line : '' }
    filter(ReplaceTokens, tokens: [author: 'mrhaki', gradleVersion: gradle.gradleVersion])
    filter(PrefixLines, prepend: "<!-- README.md COPY -->")
}

//setup this https://github.com/xvik/gradle-mkdocs-plugin
task mkdocsBuild(type: Exec) {
    commandLine 'mkdocs', 'build', "-d", "build/mkdocs/$version"
    //commandLine "bash", "-c",  "git tag --list | grep 'keyword'"
}


//task copyDocsToGhpages(type: Copy) {
//
//    from('build/mkdocs/') {
//        include '**/*.properties'
//        include '**/*.xml'
//        filter(ReplaceTokens, tokens: [version: '2.3.1'])
//    }
//
//}

task buildDocs(type: Exec, dependsOn: 'task3dependency') {
    commandLine 'mkdocs', 'build'

}

//https://stackoverflow.com/questions/44521005/gradle-groovy-command-line-grep

//http://devdeeds.com/auto-increment-build-number-using-gradle-in-android/

