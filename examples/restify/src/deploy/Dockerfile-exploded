FROM alpine:3.11

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

USER root

RUN wget --quiet https://cdn.azul.com/public_keys/alpine-signing@azul.com-5d5dc44c.rsa.pub -P /etc/apk/keys/ && \
    echo "https://repos.azul.com/zulu/alpine" >> /etc/apk/repositories && \
    apk --no-cache add zulu8-jdk

ENV JAVA_HOME=/usr/lib/jvm/zulu8-ca

# adds in some things needed for java ui and reporting, like fonts
RUN apk add --no-cache dumb-init xvfb fontconfig ttf-dejavu && \
    rm -rf /var/cache/apk/*

# keeps the volumes from run to run
# VOLUME /tmp
# VOLUME /app/conf
# VOLUME /app/resources
# VOLUME /app/logs

WORKDIR /app

EXPOSE 8080

# COPY build/libs/*.jar app.jar
# ENTRYPOINT ["java","-Dloader.path=/extData/conf/", "-jar","/app.jar"]

# ARG LIB_DIR=build/libs
ARG LIB_DIR=.
ARG APP_JAR_DIR=/app/jar

COPY ${LIB_DIR}/BOOT-INF/lib ${APP_JAR_DIR}/BOOT-INF/lib
COPY ${LIB_DIR}/org ${APP_JAR_DIR}/org
#/META-INF has version in it so it wont get changes unless version bumps
COPY ${LIB_DIR}/META-INF ${APP_JAR_DIR}/META-INF
#the default resources for demo
COPY ${LIB_DIR}/resources /app/resources
# the app classes where the bulk of the changes will be, so do this last so the above can be layer cached
COPY ${LIB_DIR}/BOOT-INF/classes ${APP_JAR_DIR}/BOOT-INF/classes

COPY docker-entrypoint.sh /usr/local/bin/

ENTRYPOINT ["docker-entrypoint.sh"]

# Reference
# http://www.projectatomic.io/docs/docker-image-author-guidance/
# https://github.com/EtienneK/spring-boot-docker-base
